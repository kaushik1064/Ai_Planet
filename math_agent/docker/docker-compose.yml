version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: math-agent-qdrant
    ports:
      - redis
    networks:
      - math-agent-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: math-agent-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - math-agent-network
    restart: unless-stopped

volumes:
  qdrant_data:
  redis_data:
  backend_logs:

networks:
  math-agent-network:
    driver: bridge "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
    networks:
      - math-agent-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: math-agent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - math-agent-network

  # Backend API
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: math-agent-backend
    ports:
      - "8000:8000"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=sqlite:///./data/math_agent.db
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - SERPER_API_KEY=${SERPER_API_KEY}
    volumes:
      - ../data:/app/data
      - backend_logs:/app/logs
    depends_on:
      - qdrant
      -